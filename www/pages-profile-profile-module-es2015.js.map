{"version":3,"sources":["./src/app/pages/profile/profile.page.html","./src/app/pages/profile/profile.module.ts","./src/app/pages/profile/profile.page.scss","./src/app/pages/profile/profile.page.ts","./src/app/services/toast.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,8jCAA8jC,2BAA2B,mSAAmS,qBAAqB,kSAAkS,wBAAwB,+d;;;;;;;;;;;;;;;;;;;;;;;ACAlqD;AACM;AACF;AACU;AACiB;AACnB;AACR;AAEA;AAE7C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;AAaF,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;CAAG;AAApB,iBAAiB;IAX7B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,8EAAgB;YAChB,kEAAmB;YACnB,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,yDAAW,CAAC;KAC5B,CAAC;GACW,iBAAiB,CAAG;AAAH;;;;;;;;;;;;AC5B9B,2BAA2B,gBAAgB,GAAG,iBAAiB,+CAA+C,GAAG,eAAe,iBAAiB,uBAAuB,GAAG,cAAc,gBAAgB,iBAAiB,GAAG,6CAA6C,ukC;;;;;;;;;;;;;;;;;;;;;ACAxN;AAEU;AACE;AACL;AACD;AACI;AAQ5D,IAAa,WAAW,GAAxB,MAAa,WAAW;IAUtB,YACU,IAAiB,EAAS,WAAyB,EACnD,YAA0B,EAAS,WAAwB;QAD3D,SAAI,GAAJ,IAAI,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAc;QACnD,iBAAY,GAAZ,YAAY,CAAc;QAAS,gBAAW,GAAX,WAAW,CAAa;QAT9D,gBAAW,GAAE,IAAI,wDAAS,CAAE,EAAE,MAAM,EAAE,IAAI,0DAAW,EAAE,EAAE,OAAO,EAAE,IAAI,0DAAW,EAAE,EAAC,CAAC,CAAC;QAG7F,aAAQ,GAAG;YACT,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,EAAE;SACV,CAAC;QAMD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,EAAC,yDAAU,CAAC,OAAO,CAAC,2CAA2C,CAAC,CAAC,CAAC;YACpH,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAClE,CAAC,CAAC;IACA,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACzC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACtB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,EAAC,EAAC,QAAQ,EAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAC,EAAE,GAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,QAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC;IAC1I,CAAC;IAEH,OAAO;QACP,IAAI,cAAc,GAAG;YACrB,UAAU,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YACjD,SAAS,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK;YAC/C,QAAQ,EAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACzB,MAAM,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK;YACzC,aAAa,EAAC,kEAAkE;SAC/E,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,iBAAiB,EAAC,cAAc,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAC,EAAE,GAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,QAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC;IAE7H,CAAC;CAGA;;YAhCiB,kEAAW;YAAuB,kEAAW;YACrC,oEAAY;YAAsB,0DAAW;;AAZ1D,WAAW;IALvB,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,mJAAkC;;KAEnC,CAAC;2EAYgB,kEAAW,EAAuB,kEAAW;QACrC,oEAAY,EAAsB,0DAAW;GAZ1D,WAAW,CA2CvB;AA3CuB;;;;;;;;;;;;;;;;;;;ACdmB;AACM;AAKjD,IAAa,YAAY,GAAzB,MAAa,YAAY;IACvB,YAAmB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAG,CAAC;IAEjD,YAAY,CAAC,WAAmB;;YACpC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,OAAO,EAAE,WAAW;gBACpB,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;KAAA;CACF;;YATqC,8DAAe;;AADxC,YAAY;IAHxB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAEoC,8DAAe;GADxC,YAAY,CAUxB;AAVwB","file":"pages-profile-profile-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-menu-toggle class=\\\"class1\\\">\\r\\n      <ion-icon name=\\\"menu\\\" color=\\\"light\\\"></ion-icon>\\r\\n    </ion-menu-toggle>\\r\\n    <ion-title>Profile</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card>\\r\\n    <ion-card-header color=\\\"secondary\\\" class=\\\"login-card-header\\\">\\r\\n      <ion-card-title>Profile</ion-card-title>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      <form padding-right [formGroup]=\\\"profileForm\\\">\\r\\n        <ion-item lines=\\\"inset\\\">\\r\\n          <ion-label position=\\\"floating\\\">password</ion-label>\\r\\n          <ion-input\\r\\n            type=\\\"password\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            placeholder=\\\"password\\\"\\r\\n            formControlName=\\\"password\\\"\\r\\n          ></ion-input>\\r\\n        </ion-item>\\r\\n        <ion-item lines=\\\"inset\\\">\\r\\n          <ion-label position=\\\"floating\\\">Email</ion-label>\\r\\n          <ion-input\\r\\n            type=\\\"password\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            placeholder=\\\"{{this.authUser?.user_email}}\\\"\\r\\n            formControlName=\\\"password\\\"\\r\\n          ></ion-input>\\r\\n        </ion-item>\\r\\n        <ion-item lines=\\\"inset\\\">\\r\\n          <ion-label position=\\\"floating\\\">Name</ion-label>\\r\\n          <ion-input\\r\\n            class=\\\"form-control\\\"\\r\\n            placeholder=\\\"{{this.authUser?.name}}\\\"\\r\\n            formControlName=\\\"name\\\"\\r\\n          ></ion-input>\\r\\n        </ion-item>\\r\\n        <ion-item lines=\\\"inset\\\">\\r\\n          <ion-label position=\\\"floating\\\">Address</ion-label>\\r\\n          <ion-input\\r\\n            class=\\\"form-control\\\"\\r\\n            placeholder=\\\"{{this.authUser?.address}}\\\"\\r\\n            formControlName=\\\"address\\\"\\r\\n          ></ion-input>\\r\\n        </ion-item>\\r\\n\\r\\n        <ion-item lines=\\\"none\\\" class=\\\"ion-item-right-margin\\\">\\r\\n          <ion-button\\r\\n            size=\\\"default\\\"\\r\\n            slot=\\\"end\\\"\\r\\n            type=\\\"submit\\\"\\r\\n            (click)=\\\"refresh()\\\"\\r\\n            >refresh</ion-button\\r\\n          >\\r\\n        </ion-item>\\r\\n      </form>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ComponentsModule } from './../../components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ProfilePage } from './profile.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProfilePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [ProfilePage]\r\n})\r\nexport class ProfilePageModule {}\r\n","module.exports = \".class1 {\\n  float: left;\\n}\\n\\nion-toolbar {\\n  --ion-background-color: #0f4c81 !important;\\n}\\n\\nion-title {\\n  color: white;\\n  text-align: center;\\n}\\n\\nion-icon {\\n  width: 30px;\\n  height: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvZmlsZS9DOlxcVXNlcnNcXGxlbm92b1xcRGVza3RvcFxccHJvamVjdFxcYWN1TUVFVC9zcmNcXGFwcFxccGFnZXNcXHByb2ZpbGVcXHByb2ZpbGUucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9wcm9maWxlL3Byb2ZpbGUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtBQ0NGOztBRENBO0VBQ0UsMENBQUE7QUNFRjs7QURBQTtFQUNFLFlBQUE7RUFDQSxrQkFBQTtBQ0dGOztBRERBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7QUNJRiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2xhc3MxIHtcclxuICBmbG9hdDogbGVmdDtcclxufVxyXG5pb24tdG9vbGJhciB7XHJcbiAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogIzBmNGM4MSAhaW1wb3J0YW50O1xyXG59XHJcbmlvbi10aXRsZSB7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5pb24taWNvbiB7XHJcbiAgd2lkdGg6IDMwcHg7XHJcbiAgaGVpZ2h0OiAzMHB4O1xyXG59XHJcbiIsIi5jbGFzczEge1xuICBmbG9hdDogbGVmdDtcbn1cblxuaW9uLXRvb2xiYXIge1xuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiAjMGY0YzgxICFpbXBvcnRhbnQ7XG59XG5cbmlvbi10aXRsZSB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5pb24taWNvbiB7XG4gIHdpZHRoOiAzMHB4O1xuICBoZWlnaHQ6IDMwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FeedService } from 'src/app/services/feed.service';\r\nimport { AuthService } from './../../services/auth.service';\r\nimport { ToastService } from './../../services/toast.service';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { HttpService } from './../../services/http.service';\r\nimport { StorageService } from './../../services/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.page.html',\r\n  styleUrls: ['./profile.page.scss'],\r\n})\r\nexport class ProfilePage implements OnInit {\r\n   \r\n  public authUser: any;\r\n  public profileForm =new FormGroup ({ userId: new FormControl(), address: new FormControl()});\r\n  public item : any;\r\n\r\n  postData = {\r\n    user_id: '',\r\n    token: ''\r\n  };\r\n  constructor(\r\n    private auth: AuthService,private httpservice : HttpService,\r\n    private toastService: ToastService,private formBuilder: FormBuilder\r\n\r\n  ) {\r\n   this.profileForm = this.formBuilder.group({\r\n        name: ['', Validators.required],\r\n        address: ['', Validators.required],\r\n        email: ['', [Validators.required, Validators.email,Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\r\n        password: ['', [Validators.required, Validators.minLength(6)]]\r\n   });\r\n      }\r\n\r\n  ngOnInit() {\r\n    this.auth.userData$.subscribe((res: any) => {\r\n      this.authUser = res;\r\n    });\r\n    this.httpservice.post(\"myprofile.php\",{\"userId\":this.authUser.ID}).subscribe((response)=>{this.item = response;console.log(response);});\r\n  }\r\n\r\nrefresh(){\r\nlet upload_details = {\r\n\"password\":this.profileForm.get('password').value,\r\n\"address\":this.profileForm.get('address').value,\r\n\"userId\":this.authUser.ID,\r\n\"name\":this.profileForm.get('name').value,\r\n\"profile_pic\":\"http://acupace.co.in/videoconfwebservice/upload_image/avatar.png\"\r\n}; \r\nthis.httpservice.post(\"update_user.php\",upload_details).subscribe((response)=>{this.item = response;console.log(response);});\r\n\r\n}\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n  constructor(public toastController: ToastController) {}\r\n\r\n  async presentToast(infoMessage: string) {\r\n    const toast = await this.toastController.create({\r\n      message: infoMessage,\r\n      duration: 2000\r\n    });\r\n    toast.present();\r\n  }\r\n}\r\n"],"sourceRoot":""}