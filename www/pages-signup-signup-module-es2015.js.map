{"version":3,"sources":["./src/app/pages/signup/signup.page.html","./src/app/pages/signup/signup.module.ts","./src/app/pages/signup/signup.page.scss","./src/app/pages/signup/signup.page.ts"],"names":[],"mappings":"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","file":"pages-signup-signup-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"mango\\\">\\n    <ion-title>Registration</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding='true'>\\n  <div class=\\\"center\\\">\\n    <img src=\\\"assets/images/logo.png\\\" class=\\\"smallLogo\\\"/> \\n    <h1>Create Account</h1>\\n  </div>\\n  <form padding text-center [formGroup]=\\\"registerForm\\\">  \\n    <ion-list>\\n        <ion-item>\\n            <ion-label position=\\\"stacked\\\">Name</ion-label>\\n            <!-- [(ngModel)]=\\\"postData.name\\\" -->\\n            <ion-input autocomplete=\\\"off\\\" formControlName=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" ></ion-input>\\n          </ion-item> \\n          <div class=\\\"noborder\\\" no-lines\\n          *ngIf=\\\"!registerForm.controls.name.valid && (registerForm.controls.name.dirty || submitAttempt)\\\">\\n          <p text-left text-wrap class=\\\"error\\\">Please enter the Name</p>\\n        </div>\\n\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Email</ion-label>\\n        <ion-input autocomplete=\\\"off\\\" formControlName=\\\"email\\\" name=\\\"email\\\" type=\\\"email\\\"></ion-input>\\n      </ion-item>\\n      <div class=\\\"noborder\\\" no-lines\\n      *ngIf=\\\"!registerForm.controls.email.valid && (registerForm.controls.email.dirty || submitAttempt)\\\">\\n      <p text-left text-wrap class=\\\"error\\\">Please enter a valid email</p>\\n    </div>\\n      \\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Mobile No</ion-label>\\n        <ion-input autocomplete=\\\"off\\\" name=\\\"mobile\\\" formControlName=\\\"mobile\\\" type=\\\"tel\\\" ></ion-input>\\n      </ion-item> \\n      <div class=\\\"noborder\\\" no-lines\\n      *ngIf=\\\"!registerForm.controls.mobile.valid && (registerForm.controls.mobile.dirty || submitAttempt)\\\">\\n      <p text-left text-wrap class=\\\"error\\\">Please enter 10 digit Mobile No.</p>\\n    </div>\\n\\n      <ion-item lines='none'>\\n        Already have an account? <a routerLink='/login'>Sign in.</a>\\n      </ion-item>\\n    </ion-list>\\n    <ion-button expand=\\\"block\\\" share=\\\"round\\\" color=\\\"success\\\" (click)=\\\"signupAction()\\\">Registration</ion-button>\\n  </form>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormsModule,FormControl,Validators, FormGroup ,ReactiveFormsModule} from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignupPage } from './signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SignupPage]\n})\nexport class SignupPageModule {}\n","module.exports = \"page-signup .noborder {\\n  border-bottom: 0px solid #ffffff !important;\\n}\\npage-signup .error {\\n  font-size: 14.4px !important;\\n  color: #ea6153;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvc2lnbnVwL0M6XFxVc2Vyc1xcQVNVU1xcRGVza3RvcFxcQW5ndWxhci1wcm9qZWN0c1xcQWN1UGFjZU1vYmlUZWFtLW1hc3RlciAoMSlcXEFjdVBhY2VNb2JpVGVhbS1tYXN0ZXIvc3JjXFxhcHBcXHBhZ2VzXFxzaWdudXBcXHNpZ251cC5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3NpZ251cC9zaWdudXAucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBQ0ksMkNBQUE7QUNGSjtBRElFO0VBQ0UsNEJBQUE7RUFDQSxjQUFBO0FDRkoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9zaWdudXAvc2lnbnVwLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInBhZ2Utc2lnbnVwIHtcblxuLy8gVmFsaWRhdGlvbiBFcnJvciBNc2dcbi5ub2JvcmRlcntcbiAgICBib3JkZXItYm90dG9tOjBweCBzb2xpZCAjZmZmZmZmICFpbXBvcnRhbnQ7XG4gIH1cbiAgLmVycm9ye1xuICAgIGZvbnQtc2l6ZTogMTQuNHB4ICFpbXBvcnRhbnQ7IFxuICAgIGNvbG9yOiAjZWE2MTUzO1xuICB9ICBcblxufSIsInBhZ2Utc2lnbnVwIC5ub2JvcmRlciB7XG4gIGJvcmRlci1ib3R0b206IDBweCBzb2xpZCAjZmZmZmZmICFpbXBvcnRhbnQ7XG59XG5wYWdlLXNpZ251cCAuZXJyb3Ige1xuICBmb250LXNpemU6IDE0LjRweCAhaW1wb3J0YW50O1xuICBjb2xvcjogI2VhNjE1Mztcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthConstants } from './../../config/auth-constants';\nimport { AuthService } from './../../services/auth.service';\nimport { StorageService } from './../../services/storage.service';\nimport { ToastService } from './../../services/toast.service';\nimport { FormBuilder, FormsModule,FormControl,Validators, FormGroup ,ReactiveFormsModule} from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.page.html',\n  styleUrls: ['./signup.page.scss']\n})\nexport class SignupPage implements OnInit {\n\n  public registerForm: FormGroup;\n  public submitAttempt: boolean = false;\n  show: boolean = true;\n  bodystring: any;\n  lat: any;\n  long: any; \n \n  // postData = {\n  //   name: '',\n  //   username: '',\n  //   email: '',\n  //   password: ''\n  // };\n\n  constructor(\n    private authService: AuthService,\n    private toastService: ToastService,\n    private storageService: StorageService,\n    private router: Router,\n    public formBuilder: FormBuilder, \n\n  ) {\n\n   \n    this.registerForm = this.formBuilder.group({\n      name: ['', Validators.compose([Validators.required])],\n      email: ['', Validators.compose([Validators.pattern('^[a-zA-Z0-9._]+[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$'), Validators.required])],\n      mobile: ['', Validators.compose([Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[0-9]*'), Validators.required])]\n    }); \n\n  }\n\n  ngOnInit() {}\n\n  // validateInputs() {\n  //   let username = this.postData.username.trim();\n  //   let password = this.postData.password.trim();\n  //   let email = this.postData.email.trim();\n  //   let name = this.postData.name.trim();\n  //   return (\n  //     this.postData.name &&\n  //     this.postData.username &&\n  //     this.postData.password &&\n  //     this.postData.email &&\n  //     email.length > 0 &&\n  //     username.length > 0 &&\n  //     email.length > 0 &&\n  //     password.length > 0\n  //   );\n  // }\n\n  signupAction() {\n\n  //   if (this.validateInputs()) { \n\n    this.submitAttempt = true;\n\n    if (this.registerForm.valid) {\n      let bodystring = {\n        \"name\": this.registerForm.get('name').value,\n        \"email\": this.registerForm.get('email').value,\n        \"mobileno\": this.registerForm.get('mobile').value,\n        \"lat\": '',\n        \"long\": '',\n        \"device_id\": '',  \n        \"device_details\": '' \n      };  \n\n      this.authService.signup(bodystring).subscribe(\n        (res: any) => {\n          if (res) {\n\n            this.toastService.presentToast(res.message);  \n\n            // Storing the User data. \n            \n            this.router.navigate(['login']); \n              \n          }else {\n            // this.toastService.presentToast(\n            //   'Data alreay exists, please enter new details.'\n            // );  \n          }\n        },\n        (error: any) => {\n          this.toastService.presentToast('Network Issue.');\n        }\n      );\n    } else {\n      this.toastService.presentToast(\n        'Please enter name, email, username or password.'\n      );\n    }\n  }\n}\n"],"sourceRoot":""}