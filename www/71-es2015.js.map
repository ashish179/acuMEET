{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-text.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2F;AAC9D;AACiC;;AAE9D;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA,qBAAqB,4DAAU;AAC/B,gBAAgB,4DAAC,CAAC,oDAAI,GAAG,wBAAwB,EAAE,4DAAkB,eAAe,eAAe,GAAG,EAAE,4DAAC;AACzG;AACA,wBAAwB,2BAA2B,4BAA4B,EAAE;AACjF;;AAE4B","file":"71-es2015.js","sourcesContent":["import { r as registerInstance, d as getIonMode, h, H as Host } from './chunk-d0403a2f.js';\r\nimport './chunk-1074393c.js';\r\nimport { c as createColorClasses } from './chunk-353a032e.js';\r\n\r\n/**\r\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\r\n */\r\nclass Text {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        return (h(Host, { class: Object.assign({}, createColorClasses(this.color), { [mode]: true }) }, h(\"slot\", null)));\r\n    }\r\n    static get style() { return \":host(.ion-color){color:var(--ion-color-base)}\"; }\r\n}\r\n\r\nexport { Text as ion_text };\r\n"],"sourceRoot":""}